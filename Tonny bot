import numpy as np
import pandas as pd
import yfinance as yf
from talib import RSI

class SimpleRSIBot:
    def __init__(self, symbol, start_date, end_date):
        self.symbol = symbol
        self.start_date = start_date
        self.end_date = end_date

    def fetch_data(self):
        # Fetch historical data from Yahoo Finance
        data = yf.download(self.symbol, start=self.start_date, end=self.end_date)
        return data

    def calculate_rsi(self, data, period=14):
        # Calculate RSI using Talib library
        rsi = RSI(data['Close'], timeperiod=period)
        return rsi

    def execute_trades(self, data, overbought_threshold=70, oversold_threshold=30):
        signals = []
        positions = []
        for i in range(len(data)):
            if data['RSI'][i] > overbought_threshold:
                signals.append(-1)  # Sell signal
            elif data['RSI'][i] < oversold_threshold:
                signals.append(1)  # Buy signal
            else:
                signals.append(0)  # Hold

            if i == 0:
                positions.append(0)  # Initial position
            else:
                positions.append(positions[-1] + signals[-1])  # Cumulative position

        return signals, positions

    def backtest_strategy(self, data, signals):
        # Backtest the strategy
        data['Signal'] = signals
        data['Market_Returns'] = np.log(data['Close'] / data['Close'].shift(1))
        data['Strategy_Returns'] = data['Signal'].shift(1) * data['Market_Returns']
        cumulative_strategy_returns = data['Strategy_Returns'].cumsum().fillna(0)
        return cumulative_strategy_returns

# Example usage
if __name__ == "__main__":
    symbol = 'AAPL'
    start_date = '2020-01-01'
    end_date = '2022-01-01'

    bot = SimpleRSIBot(symbol, start_date, end_date)
    data = bot.fetch_data()
    data['RSI'] = bot.calculate_rsi(data)
    signals, positions = bot.execute_trades(data)
    cumulative_returns = bot.backtest_strategy(data, signals)

    print(cumulative_returns.tail())  # Print the last few rows of cumulative returns
